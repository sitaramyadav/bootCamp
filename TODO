------------------------Requirements-------------------------------
------------------------Version1-------------------------------
As a match student ,i want to represent a rectangle ==>
 - so that i will be able to calculate area and perimeter.
------------------------Version2-------------------------------

As a math student, I want to represent a square ==>
  - so that i can calculate its area and perimeter
------------------------Version3-------------------------------

As a math student ,i want to represent a chance ==>
    - of getting tails when flipping a coin
    - of not getting tail when flipping a coin.
    - of getting tails when flipping two coins.
    - of getting at least one tail when flipping two coins.

    p(a||b = !(!p(a)) && !p(b))
------------------------Version4-------------------------------

As a math student -
    - I wish to compare length in feet and inches.
    - I wish to compare length in inches and centimeters
    - I wish to compare length in cm and mm
        ==> 1 cm = 10mm
    - I wish compare volumes in liter in gallon.
        ==>1 gallon = 3.78 liter

    - I want to be able to add two length in inches
    - I want to able be able to add two length in any unit and the standard output
    - is inches

  As a math student (not a good one ), I wish to compare volumes and length
            1 gallon = 1 inch

  As a math student , i want to add two volumes in any unit and the standard output is liters
            1 gallon + 1 liter = 4.78 liters

  As a math student ,i want to call out errors in a question paper that adds liters with inches.
            1 liter + 1 inches = my teacher is idot;

-------------------------------TODO-----------------------------------

==> Version 1:

Create shape.RectangleTest
    calculateAreaShouldTestCalculateArea()
    calculatePerimeterShouldTestCalculatePerimeter()

Create shape.Rectangle
    calculateArea()
    calculatePerimeter()


==> Version 2:

Create shape.SquareTest
    calculateAreaShouldTestCalculateArea()
    calculatePerimeterShouldTestCalculatePerimeter()

Create shape.Square
    calculateArea()
    calculatePerimeter()

===> Version 3:

     Create Probability
        add
        or
        not

===> Version 4:

      Create Unit
        -getBaseFactor
        -getBaseUni
      Create LengthUnit
      Create VolumeUnit
      Create Measurement
        -convert
        -compare
        -toBase


===> Version 5:






